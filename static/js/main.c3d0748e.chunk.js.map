{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/StorePicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","props","className","tagline","formatPrice","pound","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","this","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","StorePicker","myInput","goToStore","storeName","history","push","required","defaultValue","notFound","Router","BrowserRouter","Switch","Route","exact","path","NotFound","render","document","querySelector"],"mappings":"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","file":"static/js/main.c3d0748e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) =>  (\n    <header className=\"top\">\n      <h1>Catch \n        <span className=\"ofThe\">\n          <span className=\"of\">of</span> \n          <span className=\"the\">the</span>\n        </span>day</h1>\n      <h3 className=\"tagline\">\n        <span>{props.tagline}</span>\n      </h3>\n    </header>\n    )\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;","export function formatPrice(pound) {\n  return (pound / 100).toLocaleString(\"en-GB\", {\n    style: \"currency\",\n    currency: \"GBP\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key]\n    const isAvailable = fish && fish.status === 'available';\n    if(!fish) return null;\n    \n    if(!isAvailable) {\n      return (\n      <CSSTransition classNames=\"order\"\n        key={key} \n        timeout={{ enter:250, exit: 250 }}\n      >\n      <li key={key}>\n        Sorry {fish ? fish.name : 'fish'} is no longer available\n      </li>\n       </CSSTransition>\n      )\n    }\n\n    return ( \n    <CSSTransition classNames=\"order\"\n     key={key} \n     timeout={{ enter:250, exit: 250 }}\n     >\n      <li key={key}>\n      <span>\n        <TransitionGroup component=\"span\" className=\"count\">\n          <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 5000, exit: 5000 }}>\n            <span>{count}</span> \n          </CSSTransition>\n        </TransitionGroup>\n        kg {fish.name}\n        {formatPrice(count * fish.price)}\n        <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n        \n       </span>\n    </li> \n    </CSSTransition>\n   );\n  };\n  render() {\n     const orderIds = Object.keys(this.props.order);\n     const total = orderIds.reduce((prevTotal, key) => {\n       const fish = this.props.fishes[key];\n       const count = this.props.order[key]\n       const isAvailable = fish && fish.status === 'available';\n       if(isAvailable) {\n         return prevTotal + (count * fish.price);\n       }\n       return prevTotal;\n     }, 0);\n    return( \n    <div className=\"order-wrap\">\n      <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">{orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n         <strong>{formatPrice(total)}</strong>\n        </div>\n    </div>\n    );\n  }\n}\n\nexport default Order;","import React from 'react';\n\nclass AddFishForm extends React.Component {\n\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n  createFish = (event) => {\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value, \n      price: parseFloat(this.priceRef.current.value), \n      status: this.statusRef.current.value, \n      desc: this.descRef.current.value, \n      image: this.imageRef.current.value, \n    }\n    this.props.addFish(fish);\n    event.currentTarget.reset();\n\n  }\n\n  render() {\n    return ( \n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input name='price' ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n        <select name='status' ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name='desc' ref={this.descRef} placeholder=\"Desc\"></textarea>\n        <input name='image' ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n    \n  }\n}\n\nexport default AddFishForm;","import React from \"react\";\n\nclass EditFishForm extends React.Component {\nhandleChange = event => {\n  console.log(event.currentTarget.value);\n  // update that fish\n  // 1. Take a copy of the curernt fish\n  const updatedFish = {\n    ...this.props.fish,\n    [event.currentTarget.name]: event.currentTarget.value\n  };\n  this.props.updateFish(this.props.index, updatedFish);\n};\nrender() {\n  return (\n    <div className=\"fish-edit\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        onChange={this.handleChange}\n        value={this.props.fish.name}\n      />\n      <input\n        type=\"text\"\n        name=\"price\"\n        onChange={this.handleChange}\n        value={this.props.fish.price}\n      />\n      <select\n        type=\"text\"\n        name=\"status\"\n        onChange={this.handleChange}\n        value={this.props.fish.status}\n      >\n        <option value=\"available\">Fresh!</option>\n        <option value=\"unavailable\">Sold Out!</option>\n      </select>\n      <textarea\n        name=\"desc\"\n        onChange={this.handleChange}\n        value={this.props.fish.desc}\n      />\n      <input\n        type=\"text\"\n        name=\"image\"\n        onChange={this.handleChange}\n        value={this.props.fish.image}\n      />\n      <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n    </div>\n  );\n}\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n  <nav className=\"login\">\n  <h2>Inventory Login</h2>\n  <p>Sign in to manage your store's inventory.</p>\n  <button className=\"github\"\n   onClick={() => props.authenticate('Github') }>\n   Log in with Github\n  </button>\n   <button className=\"facebook\"\n   onClick={() => props.authenticate('Facebook') }>\n   Log in with Facebook\n  </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import Rebase from 're-base'; \nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyDo7WC670pp4J0cLmYgXSvD6GTzm0wFB_4\",\n    authDomain: \"catch-of-the-day-c383d.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-c383d.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebase }\n\nexport { firebaseApp };\n\nexport default base;","import React from 'react';\nimport firebase from 'firebase';\nimport PropTypes from \"prop-types\";\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n          this.authHandler({ user });\n      }\n    })\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // 1 .Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>\n\n    if(!this.state.uid) {\n      return <Login authenticate={ this.authenticate } />;\n    }\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    return( \n    <div className=\"inventory\">\n      <h2>Inventory</h2>\n      {logout}\n      {Object.keys(this.props.fishes).map(key => (\n        <EditFishForm \n          key={key}\n          index={key}\n          fish={this.props.fishes[key]}\n          updateFish={this.props.updateFish}\n          deleteFish={this.props.deleteFish}\n          />\n       ))\n      }\n      <AddFishForm addFish={this.props.addFish} />\n      <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>  \n    </div>\n    )\n    \n  }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\" ;\n\nclass Fish extends React.Component {\n  // static propTypes = {\n  //   details: PropTypes.shapes({\n  //     image: PropTypes.string,\n  //     name: PropTypes.string,\n  //     desc: PropTypes.string,\n  //     price: PropTypes.number,\n  //     status: PropTypes.string,\n  //   }),\n  //   addToOrder: PropTypes.func,\n  // }\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  }\n  render() {\n    const {image, name, desc, price, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n       <img src={image} alt={name} />\n       <h3 className=\"fish-name\">{name}\n        <span className=\"price\">{formatPrice(price)}</span>\n       </h3>\n       <p>{desc}</p>\n       <button disabled={!isAvailable} onClick={this.handleClick}>\n       {isAvailable ? 'Add To Cart' : 'Sold Out!'}</button>\n      </li>\n      );\n  }\n}\n\nexport default Fish;","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.order);\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = null;\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. remove prder from item\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  }\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order fishes={this.state.fishes} \n        order={this.state.order} \n        removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\nmyInput = React.createRef();\n\ngoToStore = (event) => {\n  // 1. Stop form from submitting\n  event.preventDefault();\n  // 2. Get the text from that input\n  const storeName = this.myInput.value;\n  console.log(this.myInput.value);\n  // 3. Change the page to /store/whatever-they-entere\n  this.props.history.push(`/store/${storeName}`);\n}\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n\n        <input \n          type=\"text\"\n          ref={(myInput) => this.myInput = myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visist Store </button>\n      </form>\n    )\n  }\n}\n\nexport default StorePicker;","import React from 'react';\n\nconst notFound = () => (\n  <div>\n    <h2>Not Found</h2>\n  </div>\n);\n\nexport default notFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => {\n  return (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={ NotFound } />\n    </Switch>\n  </BrowserRouter>\n  )\n}\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport App from \"./components/App\";\nimport Router from  \"./components/Router\";\nimport \"./css/style.css\"\n\nrender(<Router/>, document.querySelector(\"#main\"));\n"],"sourceRoot":""}